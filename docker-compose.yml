version: '3'
services:

  api-gateway:
   env_file: .env
   build:
     context: ./backend/apigateway
     dockerfile: Dockerfile
   ports:
   - ${GATEWAY_PORT}:${GATEWAY_PORT}
   networks:
     backend-network:
       ipv4_address: ${GATEWAY_IP}

#  cost-service:
#    env_file: .env
#    build:
#      context: ./backend/costservice
#      dockerfile: Dockerfile
#    expose:
#      - ${COST_SERVICE_PORT}
#    ports:
#      - ${COST_SERVICE_PORT}:${COST_SERVICE_PORT}
#    networks:
#      backend-network:
#        ipv4_address: ${COST_SERVICE_PORT}
#    depends_on:
#      - flat-room-crud

  flat-room-crud:
    env_file: .env
    build:
      context: ./backend/flatroomcrud
      dockerfile: Dockerfile
    expose:
      - ${FLAT_ROOM_CRUD_PORT}
    ports:
      - ${FLAT_ROOM_CRUD_PORT}:${FLAT_ROOM_CRUD_PORT}
    networks:
      backend-network:
        ipv4_address: ${FLAT_ROOM_CRUD_IP}
    depends_on:
      - database

  database:
    image: postgres
    restart: always
    command: -p ${DB_PORT}
    ports:
        - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      backend-network:
        ipv4_address: ${DB_IP}

networks:
  backend-network:
    ipam:
      config:
        - subnet: ${SUBNET}